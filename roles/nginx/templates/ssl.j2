  upstream backend {
      least_conn;
      server {{ backend1 }}:{{ backend_port }};
      server {{ backend2 }}:{{ backend_port }};
  }

  server {
      listen {{ listen_port }} http2 ssl;
      listen [::]:{{ listen_port }} http2 ssl;

      server_name {{ servername }};

      ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
      ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
      ssl_dhparam /etc/ssl/certs/dhparam.pem;


      ########################################################################
      # from https://cipherlist.eu/                                            #
      ########################################################################
    
      ssl_protocols TLSv1.3;# Requires nginx >= 1.13.0 else use TLSv1.2
      ssl_prefer_server_ciphers on;
      ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
      ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
      ssl_session_timeout  10m;
      ssl_session_cache shared:SSL:10m;
      ssl_session_tickets off; # Requires nginx >= 1.5.9
      ssl_stapling on; # Requires nginx >= 1.3.7
      ssl_stapling_verify on; # Requires nginx => 1.3.7
      resolver 8.8.8.8 8.8.4.4 valid=300s;
      resolver_timeout 5s;
      # Disable preloading HSTS for now.  You can use the commented out header line that includes
      # the "preload" directive if you understand the implications.
      #add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
      add_header X-Frame-Options DENY;
      add_header X-Content-Type-Options nosniff;
      add_header X-XSS-Protection "1; mode=block";
      ##################################
      # END https://cipherlist.eu/ BLOCK #
      ##################################



      #root /usr/share/nginx/html;
      
      location ~* \.(swf|css|js|ico|pdf|zip|gzip|tar.bz2|bz2|exe|7z|mp4|avi|mkv|mp3|wav|jar|sh|txt|ico|log)$ {
              root /var/www/html;
              include  /etc/nginx/mime.types;
              expires 30d;
      }
      
      location / {
              proxy_pass http://backend;
              proxy_set_header Host $host;
              proxy_set_header X-Forwarded-Proto $scheme;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Real-IP $remote_addr;
      }

      location ~ \.php$ {
          try_files $uri =404;
          fastcgi_split_path_info ^(.+\.php)(/.+)$;
          fastcgi_pass {{ fastcgi }}:{{ fastcgi_port }};
          fastcgi_index index.php;
          include fastcgi_params;
          root /var/www/html;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_param PATH_INFO $fastcgi_path_info;
      }

      error_page 404 /404.html;
      location = /404.html {
      }

      error_page 500 502 503 504 /50x.html;
      location = /50x.html {
      }

  }

